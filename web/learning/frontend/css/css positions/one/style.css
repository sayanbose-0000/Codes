*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    font-size: 1.5rem;
    min-height: 200vh;
}

.outer-container{
    border: 3px dashed #000;
    width: 75vw;
    height: 85vh;
    margin: 40px auto;
    position: relative; /*used with .absolute class's "position: absolute" property*/
}

.inner-container{
    border: 2px solid #00f;
    width: 40vw;
    height: 50vh;
    margin: 200px auto;
}

.box{
    width: 150px;
    height: 150px;
    color: #fff;
    padding: 1rem;
}

.absolute{
    background-color: #00f;
    position:absolute; /*follows position of parent whose position is set to relative. If it doesn't get a parent with a relative position, it follows body*/
    top:0;
    left:0;


    z-index:1; /*used for making the fixed box come below absolute box while scrolling whent they intersect. It is used along with fixed box's "position: fixed" attribute. The more the z-index, the more upper is the element. Eg, a z-index with 10 will be above a z-index of 5*/
}
.relative{
    background-color: red;
    position: relative; /*similar to absolute... but here, we don't need to declare relative in the parent container too...it is automatically done*/
    top:300px;
    left:100px;
}

.fixed{
    background-color: green;
    position: fixed; /* remains fixed at a single position in the page, even on scroll */
    top:100px; /* 100 px from the top */
    left: 400px;
}

.sticky{
    background-color: black;
    position: sticky; /*CSS sticky position makes an element stick to its original position until the user scrolls past a certain point.*/
    top:0;
}